 Header_file_imported 
 multiline_or_singleline_comment 
 int_detected 
 char_detected 
 long_detected 
 float_detected 
 double_detected 
 assign = 
 equal_detected == 
 greater_than > 
 less_than < 
 greater_than_and_equal >= 
 less_than_and_equal <= 
 AND_operation && 
 OR_operation || 
 NOT_operation ! 
 NOT_equal != 
 binary_AND & 
 binary_OR | 
 variable_name 
 plus + 
 minus - 
 multiplecation * 
 division / 
 modulus 
 power_pow 
 increment_one ++ 
 decriment_one -- 
 in_first_bracket 
 in_second_bracket 
 first_bracket_open ( 
 first_bracket_close ) 
 second_bracket_open { 
 second_bracket_close } 
 semicolon ; 
 void 
 return 
 printf_detected 
 scanf_detected 
 for_loop 
 while_loop 
 continue 
 break 
 static 
 structure 
 sizeof_function 
 if 
 elseif 
 else 
 positive_integer 
 positive_integer 
 negative_integer 
 positive_double 
 positive_double 
 negative_double 
 charecter 
 string 
 variable_name 




 multiline_or_singleline_comment 
 multiline_or_singleline_comment 

 Header_file_imported 

 int_detected  variable_name  assign =  positive_integer  semicolon ; 

 for_loop 
 second_bracket_open { 
 int_detected  variable_name  semicolon ; 
 scanf_detected  semicolon ; 

 if 
 second_bracket_open { 
 printf_detected  semicolon ; 
 second_bracket_close } 
 elseif 
 second_bracket_open { 
 printf_detected  semicolon ; 
 second_bracket_close } 
 else 
 second_bracket_open { 
 printf_detected  semicolon ; 
 break 
 second_bracket_close } 
 second_bracket_close } 
